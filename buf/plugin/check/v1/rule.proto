// Copyright 2024-2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package buf.plugin.check.v1;

import "buf/validate/validate.proto";

option go_package = "buf.build/gen/go/bufbuild/bufplugin/protocolbuffers/go/buf/plugin/check/v1";

// The type of the Rule.
//
// Currently, there are only two types of rules: lint rules, and breaking change rules.
// Breaking change rules require FileDescriptors to check against; if the Rule ID of a breaking change
// Rule is specified in a Check call, then against_file_descriptors are required.
enum RuleType {
  // The unspecified value.
  RULE_TYPE_UNSPECIFIED = 0;
  // A lint rule.
  RULE_TYPE_LINT = 1;
  // A breaking change rule.
  RULE_TYPE_BREAKING = 2;
}

// A rule that a CheckService implements.
message Rule {
  option (buf.validate.message).cel = {
    id: "deprecated_true_if_replacement_ids_present"
    message: "deprecated must be true if replacement_ids are present"
    expression: "!has(this.replacement_ids) || (has(this.replacement_ids) && this.deprecated)"
  };
  option (buf.validate.message).cel = {
    id: "deprecated_false_if_default_true"
    message: "deprecated must be false if default is true"
    expression: "!this.default || (this.default && !this.deprecated)"
  };

  // The ID of the rule.
  //
  // Required.
  //
  // This uniquely identifies the Rule.

  // Rule IDs must also be unique relative to Category IDs.
  //
  // Rule and Category IDs must be unique across all plugins used at the same time with
  // Buf. That is, no two plugins can both publish the same Rule or Category ID.
  //
  // This must have at least three characters.
  // This must start and end with a capital letter from A-Z or digits from 0-9, and only
  // consist of capital letters from A-Z, digits from 0-0, and underscores.
  string id = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string = {
      min_len: 3
      max_len: 64
      pattern: "^[A-Z0-9][A-Z0-9_]*[A-Z0-9]$"
    }
  ];
  // The IDs of the categories that the Rule is a part of.
  //
  // Buf uses categories to include or exclude sets of rules via configuration.
  //
  // Optional.
  //
  // The constraints for category IDs are the same as Rule IDs.
  repeated string category_ids = 2 [(buf.validate.field).repeated.items.string = {
    min_len: 3
    max_len: 64
    pattern: "^[A-Z0-9][A-Z0-9_]*[A-Z0-9]$"
  }];
  // Whether the Rule will be called by default if no Rule IDs are specified on a Check request.
  //
  // A deprecated Rule can never be a default Rule.
  bool default = 3;
  // A user-displayable purpose of the rule.
  //
  // Required.
  //
  // This should be a proper sentence that starts with a capital letter and ends in a period.
  string purpose = 4 [
    (buf.validate.field).required = true,
    (buf.validate.field).string = {
      min_len: 2
      max_len: 256
      pattern: "^[A-Z].*[.]$"
    }
  ];
  // The type of the rule.
  //
  // Required.
  RuleType type = 5 [(buf.validate.field).required = true];
  // Whether or not this Rule is deprecated.
  //
  // If the Rule is deprecated, it may be replaced by 0 or more Rules. These will be denoted
  // by replacement_ids.
  bool deprecated = 6;
  // The IDs of the Rules that replace this Rule, if this Rule is deprecated.
  //
  // This means that the combination of the Rules specified by replacement_ids replace this Rule entirely,
  // and this Rule is considered equivalent to the AND of the rules specified by replacement_ids.
  //
  // This will only be non-empty if deprecated is true.
  // This may be empty even if deprecated is true.
  //
  // It is not valid for a deprecated Rule to specfiy another deprecated Rule as a replacement.
  repeated string replacement_ids = 7 [(buf.validate.field).repeated.items.string = {
    min_len: 3
    max_len: 64
    pattern: "^[A-Z0-9][A-Z0-9_]*[A-Z0-9]$"
  }];
}
